<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.7">
  <constants>
  </constants>
  <classes>
    <class id="BrickCost" _delta="define">
      <parent>cmdbAbstractObject</parent>
      <properties>
        <comment/>
        <category>bizmodel,searchable</category>
        <abstract>false</abstract>
        <key_type>autoincrement</key_type>
        <db_table>brickcost</db_table>
        <db_key_field>id</db_key_field>
        <db_final_class_field>finalclass</db_final_class_field>
        <naming>
          <format>%1$s</format>
          <attributes>
            <attribute id="org_name"/>
          </attributes>
        </naming>
        <icon>assets/img/cost.svg</icon>
        <reconciliation>
          <attributes>
            <attribute id="org_id"/>
            <attribute id="org_name"/>
          </attributes>
        </reconciliation>
      </properties>
      <fields>
        <field id="org_id" xsi:type="AttributeExternalKey">
          <sql>org_id</sql>
          <target_class>Organization</target_class>
          <is_null_allowed>false</is_null_allowed>
          <on_target_delete>DEL_MANUAL</on_target_delete>
          <jointype/>
        </field>
        <field id="org_name" xsi:type="AttributeExternalField">
          <extkey_attcode>org_id</extkey_attcode>
          <target_attcode>name</target_attcode>
        </field>
        <field id="comment" xsi:type="AttributeText">
          <sql>comment</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="vm_base_cost" xsi:type="AttributeDecimal">
          <sql>vm_base_cost</sql>
          <default_value>0.00</default_value>
          <digits>6</digits>
          <decimals>2</decimals>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="vm_cpu_cost" xsi:type="AttributeDecimal">
          <sql>vm_cpu_cost</sql>
          <default_value>0.00</default_value>
          <digits>6</digits>
          <decimals>2</decimals>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="vm_ram_cost" xsi:type="AttributeDecimal">
          <sql>vm_ram_cost</sql>
          <default_value>0.00</default_value>
          <digits>6</digits>
          <decimals>2</decimals>
          <is_null_allowed>true</is_null_allowed>
        </field>
        <field id="vm_disk_cost" xsi:type="AttributeDecimal">
          <sql>vm_disk_cost</sql>
          <default_value>0</default_value>
          <digits>6</digits>
          <decimals>2</decimals>
          <is_null_allowed>true</is_null_allowed>
        </field>
      </fields>
      <methods>
      </methods>
      <presentation>
        <details>
          <items>
            <item id="org_id">
              <rank>10</rank>
            </item>
            <item id="vm_base_cost">
              <rank>20</rank>
            </item>
            <item id="vm_cpu_cost">
              <rank>30</rank>
            </item>
            <item id="vm_ram_cost">
              <rank>40</rank>
            </item>
            <item id="vm_disk_cost">
              <rank>50</rank>
            </item>
            <item id="comment">
              <rank>90</rank>
            </item>
        </items>
        </details>
        <default_search>
          <items>
            <item id="org_id">
              <rank>10</rank>
            </item>
          </items>
        </default_search>
      </presentation>
    </class>
    <class id="VirtualMachine" _delta="must_exist">
      <fields>
        <field id="vm_cost" xsi:type="AttributeString" _delta="define">
          <sql>vm_cost</sql>
          <default_value></default_value>
          <is_null_allowed>true</is_null_allowed>
        </field>
      </fields>
      <presentation>
        <details>
          <items>
            <item id="col:col2">
              <items>
                <item id="fieldset:Server:otherinfo">
                  <items>
                    <item id="vm_cost" _delta="define">
                      <rank>7</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
          </items>
        </details>
      </presentation>
      <methods>
        <method id="CaluclateVMCost" _delta="define">
          <static>false</static>
          <access>protected</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[ protected function CalculateVMCost()
            {
							$iOrgId = $this->Get('org_id');
							$aOrgCost = VirtualMachineCost::GetOrgCost($iOrgId);
              $this->Set('vm_cost', $aOrgCost['vm_base_cost']);
            }]]></code>
        </method>
        <method id="OnUpdate" _delta="define">
          <static>false</static>
          <access>protected</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[ protected function OnUpdate()
            {
              $this->CalculateVMCost();
              parent::OnUpdate();
            }]]></code>
        </method>
        <method id="GetInitialStateAttributeFlags" _delta="define">
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[ public function GetInitialStateAttributeFlags($sAttCode, &$aReasons = array())
            {
              // Hide the calculated field in object creation form
              if (($sAttCode == 'vm_cost'))
              {
                return(OPT_ATT_HIDDEN | parent::GetInitialStateAttributeFlags($sAttCode, $aReasons));
              }
              return parent::GetInitialStateAttributeFlags($sAttCode, $aReasons);
            }]]></code>
        </method>
        <method id="GetAttributeFlags" _delta="define">
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[ public function GetAttributeFlags($sAttCode, &$aReasons = array(), $sTargetState = '')
            {
              // Force the computed field to be read-only, preventing it to be written
              if ($sAttCode == 'vm_cost')
              {
                return(OPT_ATT_READONLY | parent::GetAttributeFlags($sAttCode, $aReasons, $sTargetState));
              }
              return parent::GetAttributeFlags($sAttCode, $aReasons, $sTargetState);
            }]]></code>
        </method>
      </methods>
    </class>
  </classes>
  <menus>
    <menu id="BrickCost" xsi:type="OQLMenuNode" _delta="define">
      <rank>105</rank>
      <parent>ConfigEditor</parent>
      <oql>SELECT BrickCost</oql>
      <do_search>1</do_search>
      <auto_reload>fast</auto_reload>
    </menu>
  </menus>
  <user_rights>
    <groups>
    </groups>
    <profiles>
    </profiles>
  </user_rights>
</itop_design>
